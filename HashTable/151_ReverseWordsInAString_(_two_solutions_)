<?php 

#Solution 1 => Available at https://leetcode.com/problems/reverse-words-in-a-string/submissions/1172926823
#Solution 2 => https://leetcode.com/problems/reverse-words-in-a-string/submissions/1172948955

/*

############ 151. Reverse Words in a String #################

Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"
Example 2:

Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:

Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.

*/

class Solution {

    /**
     * @param String $s
     * @return String
     */
    function reverseWords($s) {

// Start - Solution - 1
        $s_arr = explode(" ",trim($s));
        
        $str_count = count($s_arr);
        $rev_str='';

        for($i=($str_count-1);$i>=0;$i--)
        {
           $get_word = trim($s_arr[$i]);
           $add_space = ($i==0)?"":" ";

            if($get_word=="")
            {
                continue;
            }

            $rev_str .= trim($get_word).$add_space;
        }

        return $rev_str;
     }
// End - Solution - 1 

//Start - solution - 2
/*
  Steps =>
    1.Converting String to Array by space using explode
    2.Removing Space to each array value using array_map("trim",array)
    3.Reversing the array.
    4.Removing empty value from array using array_filter().
      // Passing the built-in strlen function as the filtering function will work, because it returns a non-zero integer for a non-empty string, and a zero integer for an empty string. Non-zero integers always evaluate to true when converted to boolean, while zero integers always evaluate to false when converted to boolean.
    5. Glued the reversed array value using implode() and returning the string.
*/

  $rev_str = implode(" ",array_filter(array_reverse(array_map("trim",explode(" ",trim($s)))),'strlen'));
  return $rev_str;

//End - solution - 2
}


$sol = new Solution();

//$s = "the sky is blue";
$s="  hello world  ";
//$s="a good   example";
$result = $sol ->reverseWords($s);
//echo "hut (true)<br/>";
echo $result;
